*** /home/molnar/Downloads/unittests1/projects/transformed-InstaPy/instapy/text_analytics.py
--- /home/molnar/Downloads/unittests1/projects/transformed-InstaPy/instapy/text_analytics.py
***************
*** 430,441 ****
          YANDEX_CONFIG.update(enabled=False)
          service_turnoff_msg = "turned off Yandex service"
  
!         if status_code == 401:
!             error_msg = "API key provided is invalid"
!         elif status_code == 402:
!             error_msg = "API key provided is blocked"
!         elif status_code == 404:
!             error_msg = "you've reached the request limit"
  
          print("")
          logger.error(
--- 430,442 ----
          YANDEX_CONFIG.update(enabled=False)
          service_turnoff_msg = "turned off Yandex service"
  
!         match status_code:
!             case 401:
!                 error_msg = 'API key provided is invalid'
!             case 402:
!                 error_msg = 'API key provided is blocked'
!             case 404:
!                 error_msg = "you've reached the request limit"
  
          print("")
          logger.error(
***************
*** 444,455 ****
          return False
  
      elif status_code in [413, 422, 501]:
!         if status_code == 413:
!             error_msg = "given text exceeds the maximum size :<"
!         elif status_code == 422:
!             error_msg = "given text couldn't be translated :("
!         elif status_code == 501:
!             error_msg = "the specified translation direction is not " "supported ~.~"
  
          print("")
          logger.error("{}\t~{}\n".format(YANDEX_FAILURE_MSG, error_msg))
--- 445,457 ----
          return False
  
      elif status_code in [413, 422, 501]:
!         match status_code:
!             case 413:
!                 error_msg = 'given text exceeds the maximum size :<'
!             case 422:
!                 error_msg = "given text couldn't be translated :("
!             case 501:
!                 error_msg = 'the specified translation direction is not supported ~.~'
  
          print("")
          logger.error("{}\t~{}\n".format(YANDEX_FAILURE_MSG, error_msg))
***************
*** 481,512 ****
          MEANINGCLOUD_CONFIG.update(enabled=False)
          service_turnoff_msg = "turned off MeaningCloud service"
  
!         if status_code == "100":
!             error_msg = (
!                 "operation denied: license key is either incorrect,"
!                 " unauthorized to make requests or you've been "
!                 "banned from using service"
!             )
! 
!         elif status_code == "101":
!             error_msg = (
!                 "license expired: license key you're sending to use "
!                 "the API has expired"
!             )
! 
!         elif status_code == "102":
!             consumed_credits = request.getConsumedCredits() or "unknown"
!             time_until_next_month = get_time_until_next_month()
! 
!             error_msg = (
!                 "credits per subscription exceeded: ran out of credits for "
!                 "current month"
!                 " (spent: {}) - wait for credits to be reset at month end ({}"
!                 " days)".format(
!                     consumed_credits,
!                     truncate_float(time_until_next_month / 60 / 60 / 24, 2),
!                 )
!             )
  
          print("")
          logger.error(
--- 483,497 ----
          MEANINGCLOUD_CONFIG.update(enabled=False)
          service_turnoff_msg = "turned off MeaningCloud service"
  
!         match status_code:
!             case '100':
!                 error_msg = "operation denied: license key is either incorrect, unauthorized to make requests or you've been banned from using service"
!             case '101':
!                 error_msg = "license expired: license key you're sending to use the API has expired"
!             case '102':
!                 consumed_credits = request.getConsumedCredits() or 'unknown'
!                 time_until_next_month = get_time_until_next_month()
!                 error_msg = 'credits per subscription exceeded: ran out of credits for current month (spent: {}) - wait for credits to be reset at month end ({} days)'.format(consumed_credits, truncate_float(time_until_next_month / 60 / 60 / 24, 2))
  
          print("")
          logger.error(
***************
*** 532,610 ****
          "215",
      ]:
  
!         if status_code == "103":
!             error_msg = (
!                 "request too large: exceeded the limit on the number of words"
!                 " that can be analyzed in a single request (max 50000)"
!             )
! 
!         elif status_code == "104":
!             error_msg = (
!                 "request rate limit exceeded: hit the limit set for number of"
!                 " requests can be carried out concurrently (per second)"
!             )
! 
!         elif status_code == "105":
!             error_msg = (
!                 "resource access denied: no access to a resource or language "
!                 "either cos haven't subscribed to any packs or trial ended"
!             )
! 
!         elif status_code == "200":
!             error_msg = (
!                 "missing required parameter(s): you haven't specified one of"
!                 " the required parameters"
!             )
! 
!         elif status_code == "201":
!             error_msg = (
!                 "resource not supported: you've sent an incorrect value for"
!                 " the 'model' or 'ud' parameters"
!             )
! 
!         elif status_code == "202":
!             error_msg = (
!                 "engine internal error: internal error has occurred in"
!                 " service engines (wait a few minutes and try again)"
!             )
! 
!         elif status_code == "203":
!             error_msg = (
!                 "can't connect to service: unable to serve the request due to"
!                 " high load in servers (wait a few minutes & try again)"
!             )
! 
!         elif status_code == "204":
!             error_msg = (
!                 "resource not compatible for the language automatically"
!                 " identified from the text"
!             )
! 
!         elif status_code == "205":
!             error_msg = (
!                 "language not supported: you've sent an incorrect value "
!                 "for the lang parameter"
!             )
! 
!         elif status_code == "212":
!             error_msg = (
!                 "no content to analyze: content provided to analyze couldn't "
!                 "be"
!                 " accessed or converted into HTML (make sure value is "
!                 "supported)"
!             )
! 
!         elif status_code == "214":
!             error_msg = (
!                 "wrong format: one of the parameters sent does not have"
!                 " the accepted format"
!             )
! 
!         elif status_code == "215":
!             error_msg = (
!                 "timeout exceeded for service response: it's taken too long"
!                 " to respond & exceeded the timeout set for the system"
!             )
  
          print("")
          logger.error("{}\t~{}\n".format(MEANINGCLOUD_FAILURE_MSG, error_msg))
--- 517,547 ----
          "215",
      ]:
  
!         match status_code:
!             case '103':
!                 error_msg = 'request too large: exceeded the limit on the number of words that can be analyzed in a single request (max 50000)'
!             case '104':
!                 error_msg = 'request rate limit exceeded: hit the limit set for number of requests can be carried out concurrently (per second)'
!             case '105':
!                 error_msg = "resource access denied: no access to a resource or language either cos haven't subscribed to any packs or trial ended"
!             case '200':
!                 error_msg = "missing required parameter(s): you haven't specified one of the required parameters"
!             case '201':
!                 error_msg = "resource not supported: you've sent an incorrect value for the 'model' or 'ud' parameters"
!             case '202':
!                 error_msg = 'engine internal error: internal error has occurred in service engines (wait a few minutes and try again)'
!             case '203':
!                 error_msg = "can't connect to service: unable to serve the request due to high load in servers (wait a few minutes & try again)"
!             case '204':
!                 error_msg = 'resource not compatible for the language automatically identified from the text'
!             case '205':
!                 error_msg = "language not supported: you've sent an incorrect value for the lang parameter"
!             case '212':
!                 error_msg = "no content to analyze: content provided to analyze couldn't be accessed or converted into HTML (make sure value is supported)"
!             case '214':
!                 error_msg = 'wrong format: one of the parameters sent does not have the accepted format'
!             case '215':
!                 error_msg = "timeout exceeded for service response: it's taken too long to respond & exceeded the timeout set for the system"
  
          print("")
          logger.error("{}\t~{}\n".format(MEANINGCLOUD_FAILURE_MSG, error_msg))
